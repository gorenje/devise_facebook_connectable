h1. DEVISE / FACEBOOK CONNECTABLE

Simplified Facebook connect for Devise. 

*Warning*

This is a simplified version of the original "Devise Facebook Connectable":https://github.com/grimen/devise_facebook_connectable that only uses the *fbs_&lt;APP_ID&gt;* cookie for authentication. It removes the dependency on "Facebooker":https://github.com/mmangino/facebooker because (at time of writing) there was no working version (in gem form) of Facebooker for Rails3.

Since this is specifically for Rails3, it will only work with Ruby 1.9.x (However the only change that makes this necessary is the use of Object#tap instead of Object#returning.).

There is no longer to generate anything: facebooker.yml is not longer necessary and this version makes no use of Javascript, instead the fb:login-button is utilised, after which a check is done whether the Facebook cookie is set.

h2. What is Devise?

"http://github.com/plataformatec/devise":http://github.com/plataformatec/devise

h2. What is Devise Facebook Connect?

*Simple:*

A very straightforward *"Facebook Connect":http://wiki.developers.facebook.com/index.php/Facebook_Connect* authentication/linking with the ease of *"Devise":http://github.com/plataformatec/devise* and power of *"Facebooker":http://github.com/mmangino/facebooker*. If I may say it myself: The easiest way to get a Rails app authorized and connected with Facebook Connect. Authentication in Rails should be straightforward, right? Let's build awesome web-apps instead of re-inventing the authentication!

h2. Dependencies

*You'll need:*

* *"devise 1.0.6":http://github.com/plataformatec/devise* for authentication - based on "warden":http://github.com/hassox/warden/.

h2. Installation

*Gem*

Currenly this is gem is only available directly from github and preferable using a Gemfile:

<pre>
  gem 'devise_facebook_connectable_light', :git => 'git://github.com/gorenje/devise_facebook_connectable.git', :require => 'devise_facebook_connectable'
</pre>

*Dependencies*

<pre>
  gem 'devise'
</pre>

h2. Setup

*Devise: Setup*

See "Devise":http://github.com/plataformatec/devise documentation for instructions on how to setup Devise.

Also see "Facebook":http://developers.facebook.com on how to setup your Facebook app. See below for more details.

*Facebook Connectable: Setup*

You'll need an @config/initializers/devise_facebook.rb@ initializer that looks something like:

<pre>
  Devise::FacebookConnectable.setup do |config|
    config.api_id    = <Facebook API ID>
    config.api_token = <Facebook API Token>
    config.secret    = <Facebook API Secret>
  end
</pre>

*Facebook Connectable: Migration*

Assuming you're Devise model is 'User':

<pre>
  create_table :users do |t|

    t.facebook_connectable

    ...

  end
</pre>

...and indexes (optional):

<pre>
  add_index :users, :facebook_uid, :unique => true
</pre>

...since this gem does not collect facebook emails, you'll have to remove the unique index on email:

<pre>
  add_index :users, :email
</pre>

...and then don't forget: @$ rake db:migrate@.

*Facebook Connectable: Model*

<pre>
  class User < ActiveRecord::Base

    devise :facebook_connectable, ...

  end
</pre>

*Note:* All modules must be specified on the same line since Devise 1.0.0, otherwise Devise will only load the last call @devise [MODULES]@ - which will cause FacebookConnectable to fail to initialize.

h2. Configuration

*Create a Facebook app*

..if you haven't already:

*"Create Facebook Application":http://facebook.com/developers/createapp.php*

...with settings:

Application settings > Connect > Facebook Connect Settings > Connect URL: @http://localhost:3000@ (for testing purposes)
Application settings > Advanced > Advanced Settings > Sandbox Mode: @Enabled@

*I18n*

Sign in/out link labels, and Flash error messages can be set using I18n:

<pre>
  en:
    devise:
      sessions:
        facebook_invalid: "Could not sign in. Invalid account."
        facebook_timeout: "Facebook session expired., please sign in again to continue."
        facebook_authenticity_token: "Something went wrong. For security reasons, please sign in again."
        facebook_actions:
          sign_in: "Sign in"
          sign_out: "Sign out"
</pre>

Note: The usage of @:sign_in@/@:sign_out@ depends on configuration, e.g. not used for the traditional and default Facebook Connect button.

h2. Usage

In @app/views/layouts/application.html.*@, something like (showing only the relevant parts), you'll need to add the Facebook Javascript tag and root tag.

<pre>
  <html xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://www.facebook.com/2008/fbml">
    <head>
      ...
    </head>
    <body>
      ...
      <%= yield %>
      <%= facebook_root_tag %>
      <%= facebook_javascript_include_tag %>
      ...
    </body>
  </html>
</pre>

or in Haml:

<pre>
!!!
%html{ :xmlns => "http://www.w3.org/1999/xhtml", "xml:lang" => :en,  :lang => :en }
  %head
  ...
  %body
    ...
    = yield
    ...
    = facebook_root_tag
    = facebook_javascript_include_tag
</pre>

Notice that both tags have to appear in the body of the document, not in the head. This is particularly important for the javascript include tag since this depends on the existence of the fb-root div, otherwise it won't work.

*View:*

...add the sign in/out (connect) link somewhere - auto-detects scope:

<pre>
  <%= facebook_link %>
</pre>

...or with explicit scope:

<pre>
  <%= facebook_link :customer %>
</pre>

...or even more explicit, something like:

<pre>
  <% unless signed_in?(:user) %>
    <%= facebook_sign_in_link :user %>
  <% else %>
    <%= facebook_sign_out_link :user %>
  <% end %>
</pre>

etc.

*DONE!*

<pre>
  $ rails s
</pre>

*Note:* If you experience any issues with connecting and/or signing in/out now, then I simply must have forgot something in these instructions. Please file a GitHub-issue in such case! =)

h2. Important

It's not been tested extensively. These are changes that I required to get Facebook connect working with Devise using the existing fb:login-button (or the helpers defined here). 

It does not do OAuth2 authentication -- only cookie based.

h2. References

*Documentation:*

* "Facebooker RDoc":http://facebooker.rubyforge.org
* "Facebook Connect Home":http://wiki.developers.facebook.com/index.php/Facebook_Connect
* "Facebook Connect Wiki":http://wiki.developers.facebook.com/index.php/Connect/Authorization_Websites
* "Facebook Connect Javascript SDK":http://developers.facebook.com/docs/?u=facebook.jslib.FB.Connect

*Repos:*

* "Facebook Connect Javascript client":http://github.com/facebook/connect-js

h2. TODO / Known Issues

Priority:

* *Timeoutable* module should timeout Facebook sessions as well - configurable.
* *Specs/Features* would be great. Skipped tests so far as I built this using experimenting as I wasn't sure how Devise and Warden was working - trial-n-error style. Would appreciate any help on this. Looking into using Cucumber + "watircuke":http://github.com/richdownie/watircuke / "culerity":http://github.com/langalex/culerity.
* *Disconnect link helper* would makes sense, i.e. disconnect a Facebook account from the app/site (a.k.a. delete the account Facebook Connect style).
* *Connect existing accounts* using "Connect.registerUsers":http://wiki.developers.facebook.com/index.php/Connect.registerUsers.
* *Option: Facebooker vs. MiniFB* - a more slimmed implementation if Facebooker feels to heavy - for those who don't want to depend on Facebooker - want something more light-weight. Most probably implemented using "MiniFB":http://github.com/appoxy/mini_fb.
* *Review controller logic* - some of my Facebooker hacks in controller might not be best practice. They seem to do the job though. =)

Maybe:

* *Expired sessions* aka @Facebooker::Session::SessionExpired@ appears less now after some controller filter hacks - but needs thorough testing.
* *HAML vs ERB clash* - that I right now consider as a HAML bug - breaks the view helpers *if both ERB and HAML is used* in the same project. Can be avoided by either using HAML gem/plugin and use HAML views only, and vice-versa. Note: Something with the @form_for@-helper causing this issue.

h2. License

Released under the MIT license.<br />
Copyright (c) 2009-2010 "Jonas Grimfelt":http://github.com/grimen
